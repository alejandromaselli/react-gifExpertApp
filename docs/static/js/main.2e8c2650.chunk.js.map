{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.jsx","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.jsx","GifExpertApp.component.jsx","index.js"],"names":["AddCategory","setCategoris","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","setCategories","categoris","element","index","ReactDOM","render","document","getElementById"],"mappings":"6MA8BeA,EA5BI,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,aAAkB,EAEAC,mBAAS,IAFT,mBAE7BC,EAF6B,KAEjBC,EAFiB,KAiBpC,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAa,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAAUH,GADtF,sBAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAaZM,GAbY,4CAAH,sDCaLO,EAXK,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAG9B,OACI,yBAAKc,UAAU,2DACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAKA,KCoBFO,EAvBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFN,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAEGqB,EDb2BK,CAAc1B,GAAlCa,EAFgB,EAEtBN,KAAca,EAFQ,EAERA,QAEtB,OACI,oCACI,wBAAIJ,UAAU,mDAAoDhB,GAChEoB,GAAW,sCACd,6BACC,yBAAKJ,UAAU,aAEHH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UEarBkB,EA5BM,WAAO,IAAD,EAEY1C,mBAAS,CAAC,kBAFtB,mBAEjB2C,EAFiB,KAELC,EAFK,KAIvB,OACI,6BACI,wBAAInB,GAAG,SAAP,gBACA,kBAAC,EAAD,CACI1B,aAAe6C,EACfC,UAAYF,IAEhB,6BAEI,4BACAA,EAAWpB,KAAI,SAACuB,EAASC,GACrB,OACI,kBAAC,EAAD,CACIN,IAAKK,EACLhC,SAAUgC,UChBtCE,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.2e8c2650.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nconst AddCategory =({ setCategoris })=> {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategoris(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return(\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default AddCategory;","export const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=VLGALLuyiZrCxyMFUfvfH3izL8N13f0d&q=${encodeURI(category)}&limit=10`;\r\n    \r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n};","import React from 'react'\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n    \r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__slow-2s\">\r\n            <img src={url} alt={title} />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n//import { getGifs } from '../helpers/getGifs';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs( category );\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn animate__slow\">{ category }</h3>\r\n            { loading && <p>Loading</p>}\r\n           <hr />\r\n            <div className=\"card-grid\">\r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem\r\n                                key={img.id}\r\n                                {...img}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid;","import React, { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const[categories, setCategories] = useState(['One Punch Man']);\r\n\r\n    return(\r\n        <div>\r\n            <h2 id='title'>GifExpertApp</h2>\r\n            <AddCategory \r\n                setCategoris={ setCategories }\r\n                categoris={ categories }\r\n            />\r\n            <hr />\r\n            {\r\n                <ol>{\r\n                categories.map((element, index) => {\r\n                    return(\r\n                        <GifGrid \r\n                            key={element} \r\n                            category={element} \r\n                        />\r\n                    )\r\n                })\r\n                }</ol>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp.component'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}